<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="9" passed="4" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-12-10T10:31:09Z" name="Suite" finished-at="2018-12-10T10:31:11Z" duration-ms="1447">
    <groups>
    </groups>
    <test started-at="2018-12-10T10:31:09Z" name="Test" finished-at="2018-12-10T10:31:11Z" duration-ms="1447">
      <class name="com.uiFrameWork.zone92.projectAutomation.testScripts.Test2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:10Z" name="beforeClass" finished-at="2018-12-10T10:31:10Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:10Z" name="beforeMethod" finished-at="2018-12-10T10:31:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFrameWork.zone92.projectAutomation.testScripts.Test2.testLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testLogin()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:10Z" name="testLogin" finished-at="2018-12-10T10:31:10Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:10Z" name="afterMethod" finished-at="2018-12-10T10:31:11Z" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=Test2.testLogin()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="beforeMethod" finished-at="2018-12-10T10:31:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFrameWork.zone92.projectAutomation.testScripts.Test2.testLogin1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testLogin1()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="testLogin1" finished-at="2018-12-10T10:31:11Z" duration-ms="10" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.uiFrameWork.zone92.projectAutomation.helper.assertion.AssertionHelper.makeFalse(AssertionHelper.java:29)
at com.uiFrameWork.zone92.projectAutomation.testScripts.Test2.testLogin1(Test2.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="afterMethod" finished-at="2018-12-10T10:31:11Z" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin1 status=FAILURE method=Test2.testLogin1()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testLogin2()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="testLogin2" finished-at="2018-12-10T10:31:11Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin2 -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="beforeMethod" finished-at="2018-12-10T10:31:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFrameWork.zone92.projectAutomation.testScripts.Test2.testLogin2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="afterMethod" finished-at="2018-12-10T10:31:11Z" duration-ms="90" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin2 status=SUCCESS method=Test2.testLogin2()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="beforeMethod" finished-at="2018-12-10T10:31:11Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFrameWork.zone92.projectAutomation.testScripts.Test2.testLogin3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testLogin3()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="testLogin3" finished-at="2018-12-10T10:31:11Z" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.uiFrameWork.zone92.projectAutomation.helper.assertion.AssertionHelper.makeFalse(AssertionHelper.java:29)
at com.uiFrameWork.zone92.projectAutomation.testScripts.Test2.testLogin3(Test2.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin3 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8]" started-at="2018-12-10T10:31:11Z" name="afterMethod" finished-at="2018-12-10T10:31:11Z" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin3 status=FAILURE method=Test2.testLogin3()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test2@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.uiFrameWork.zone92.projectAutomation.testScripts.Test2 -->
      <class name="com.uiFrameWork.zone92.projectAutomation.testScripts.Test1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:09Z" name="beforeSuite" finished-at="2018-12-10T10:31:09Z" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:09Z" name="beforeClass" finished-at="2018-12-10T10:31:09Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:09Z" name="beforeMethod" finished-at="2018-12-10T10:31:09Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFrameWork.zone92.projectAutomation.testScripts.Test1.testLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testLogin()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:09Z" name="testLogin" finished-at="2018-12-10T10:31:10Z" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="afterMethod" finished-at="2018-12-10T10:31:10Z" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=Test1.testLogin()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="beforeMethod" finished-at="2018-12-10T10:31:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFrameWork.zone92.projectAutomation.testScripts.Test1.testLogin1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testLogin1()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="testLogin1" finished-at="2018-12-10T10:31:10Z" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.uiFrameWork.zone92.projectAutomation.helper.assertion.AssertionHelper.makeFalse(AssertionHelper.java:29)
at com.uiFrameWork.zone92.projectAutomation.testScripts.Test1.testLogin1(Test1.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="afterMethod" finished-at="2018-12-10T10:31:10Z" duration-ms="167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin1 status=FAILURE method=Test1.testLogin1()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="beforeMethod" finished-at="2018-12-10T10:31:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFrameWork.zone92.projectAutomation.testScripts.Test1.testLogin2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testLogin2()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="testLogin2" finished-at="2018-12-10T10:31:10Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin2 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="afterMethod" finished-at="2018-12-10T10:31:10Z" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin2 status=SUCCESS method=Test1.testLogin2()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="beforeMethod" finished-at="2018-12-10T10:31:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFrameWork.zone92.projectAutomation.testScripts.Test1.testLogin3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testLogin3()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="testLogin3" finished-at="2018-12-10T10:31:10Z" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.uiFrameWork.zone92.projectAutomation.helper.assertion.AssertionHelper.makeFalse(AssertionHelper.java:29)
at com.uiFrameWork.zone92.projectAutomation.testScripts.Test1.testLogin3(Test1.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin3 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1]" started-at="2018-12-10T10:31:10Z" name="afterMethod" finished-at="2018-12-10T10:31:10Z" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin3 status=FAILURE method=Test1.testLogin3()[pri:0, instance:com.uiFrameWork.zone92.projectAutomation.testScripts.Test1@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.uiFrameWork.zone92.projectAutomation.testScripts.Test1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
